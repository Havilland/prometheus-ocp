---
# tasks file for prometheus-ocp

# use k8s_facts to check if namespace is there > if not then start install

- name: Create temp directory for doing work in
  command: mktemp -d /tmp/prometheus-ocp-XXXXXX
  register: mktemp
  changed_when: False
  check_mode: no

- name: Check if cluster_prometheus is deployed
  k8s_facts:
    verify_ssl: "{{ lookup('env','K8S_AUTH_VERIFY_SSL') }}"
    api_version: v1
    kind: Deployment
    namespace: '{{ cluster_prometheus_namespace}}'
    label_selectors:
      - k8s-app = {{ cluster_prometheus_label }}
  register: prometheus_operator

#- debug:
#    var: prometheus_operator.resources

- include_tasks: install.yml
  when: prometheus_operator.resources | length == 0 

- name: Search for grafana wanted labels
  k8s_facts:
    verify_ssl: "{{ lookup('env','K8S_AUTH_VERIFY_SSL') }}"
    api_version: v1
    kind: namespace
    label_selectors:
      -  "{{ cluster_prometheus_namespace_label }}" # search for namespaces with the specified label to deploy prometheus and grafana in there.
  register: namespaces_prom

#- debug:
#    var: namespaces_prom

#- debug:
#    msg: "item: {{ item.metadata.name }}"
#  loop: "{{ namespaces_prom.resources | flatten(levels=1) }}"

- include_tasks: app-monitoring.yml
  loop: "{{ namespaces_prom.resources|flatten(levels=1) }}"
  loop_control:
    index_var: current_namespace

- include_tasks: grafana.yml
  loop: "{{ namespaces_prom.resources|flatten(levels=1) }}"
  loop_control:
    index_var: current_namespace

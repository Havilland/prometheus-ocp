---
- name: "Deploy Minio statefulset service"
  k8s:
    verify_ssl: "{{ k8s_auth_verify_ssl }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: minio
        labels:
          app: minio
      spec:
        clusterIP: None
        ports:
          - port: 9000
            name: minio
        selector:
          app: minio

- name: "Deploy minio-service"
  k8s:
    verify_ssl: "{{ k8s_auth_verify_ssl }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: minio-service
      spec:
        type: LoadBalancer
        ports:
          - port: 9000
            targetPort: 9000
            protocol: TCP
        selector:
          app: minio

- name: "Create thanos-peers headless service"
  k8s:
    verify_ssl: "{{ k8s_auth_verify_ssl }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: thanos-peers
      spec:
        type: ClusterIP
        clusterIP: None
        ports:
          - name: cluster
            port: 10900
            targetPort: cluster
        selector:
          thanos-peer: "true"

- name: "Create thanos-query headless service"
  k8s:
    verify_ssl: "{{ k8s_auth_verify_ssl }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: thanos-query
        name: thanos-query
      spec:
        type: NodePort
        externalTrafficPolicy: Cluster
        ports:
          - name: http-query
            port: 9090
            protocol: TCP
            targetPort: http
        selector:
          app: thanos-query

- name: "Create yml files from templates"
  template:
    src: "{{ item }}.j2"
    dest: "{{ mktemp.stdout }}/{{ item }}"
  loop:
    - "bucket-config.yml"
    - "minio-deployment.yml"
    - "thanos-query.yml"
    - "thanos-store.yml"

- name: "Deploy minio"
  k8s:
    verify_ssl: "{{ k8s_auth_verify_ssl }}"
    state: present
    src: "{{ mktemp.stdout }}/minio-deployment.yml"

- name: "Wait 60 seconds for minio deployment"
  pause: seconds=60

#- name: "Configure bucket in minio" # TODO

#- name: "Create configMap with bucket config" # TODO

- name: "Deploy thanos-store statefulset"
  k8s:
    verify_ssl: "{{ k8s_auth_verify_ssl }}"
    state: present
    src: "{{ mktemp.stdout }}/thanos-store.yml"

- name: "Deploy thanos-query"
  k8s:
    verify_ssl: "{{ k8s_auth_verify_ssl }}"
    state: present
    src: "{{ mktemp.stdout }}/thanos-query.yml"

# TODO add grafana with thanos-query as datasource